{"version":3,"sources":["logo.svg","components/card/index.js","containers/jokes/index.js","App.js","reportWebVitals.js","index.js"],"names":["Joke","props","title","style","width","margin","src","icon","fontSize","fontWeight","textAlign","value","Option","Select","Main","useState","jokes","setJokes","category","setCategory","useEffect","generateJoke","fetchCategory","jokesItems","map","item","i","id","icon_url","axios","get","then","res","data","height","onClick","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAe,I,wECcAA,MATf,SAAcC,GACV,OACI,eAAC,IAAD,CAAMC,MAAM,oBAAoBC,MAAO,CAACC,MAAO,QAASC,OAAQ,UAAhE,UACI,qBAAKF,MAAO,CAACE,OAAQ,gBAAiBC,IAAKL,EAAMM,OACjD,mBAAGJ,MAAO,CAACK,SAAU,OAAQC,WAAY,MAAOC,UAAW,UAA3D,SAAuET,EAAMU,YCJlFC,G,cAAUC,EAAVD,QAiCQE,MA/Bf,WAAiB,IAAD,EAEcC,mBAAS,IAFvB,mBAELC,EAFK,KAEEC,EAFF,OAGoBF,mBAAS,IAH7B,mBAGLG,EAHK,KAGKC,EAHL,KAKZC,qBAAU,WACNC,IACAC,MACD,IAEH,IAAMC,EAAaP,EAAMQ,KAAI,SAACC,EAAMC,GAAP,OAAa,cAAC,EAAD,CAAMC,GAAIF,EAAKE,GAAIhB,MAAOc,EAAKd,MAAOJ,KAAMkB,EAAKG,cAIrFP,GAFgBH,EAASM,KAAI,SAACC,EAAMC,GAAP,OAAa,cAACd,EAAD,UAASa,EAAKC,QAEzC,WACjBG,IAAMC,IAAI,2CAA2CC,MAAK,SAAAC,GAAG,OAAIf,EAAS,CAACe,EAAIC,YAG7EX,EAAgB,WAClBO,IAAMC,IAAI,+CAA+CC,MAAK,SAAAC,GAAG,OAAIb,EAAYa,EAAIC,UAGzF,OACI,gCACI,qBAAK3B,IAAI,wFAAwFH,MAAO,CAACC,MAAO,OAAO8B,OAAQ,QAAS7B,OAAQ,iBAChJ,wBAAQF,MAAO,CAACK,SAAU,OAAQC,WAAY,OAAQ0B,QAASd,EAA/D,2BACCE,MClBEa,MAVf,WACE,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAWzB,SCG/B0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.b410ee79.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState, useEffect } from 'react'\r\nimport { Card } from 'antd'\r\nimport 'antd/dist/antd.css';\r\n\r\n\r\nfunction Joke(props) {\r\n    return (\r\n        <Card title='Chuck Norris joke' style={{width: '500px', margin: '0 auto'}}>\r\n            <img style={{margin: '0 170px 20px'}} src={props.icon} />\r\n            <p style={{fontSize: '24px', fontWeight: '600', textAlign: 'center'}}>{props.value}</p>\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default Joke;","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Joke from '../../components/card/index'\r\nimport '../jokes/style.css'\r\nimport { Select } from 'antd'\r\nconst {Option} = Select\r\n\r\nfunction Main() {\r\n    \r\n    const [jokes, setJokes] = useState([])\r\n    const [category, setCategory] = useState([])\r\n\r\n    useEffect(() => {\r\n        generateJoke()\r\n        fetchCategory()\r\n    }, [])\r\n\r\n    const jokesItems = jokes.map((item, i) => <Joke id={item.id} value={item.value} icon={item.icon_url}/>)\r\n\r\n    const categoryitems = category.map((item, i) => <Option>{item[i]}</Option>)\r\n\r\n    const generateJoke = () => {\r\n        axios.get('https://api.chucknorris.io/jokes/random').then(res => setJokes([res.data]))\r\n    }\r\n\r\n    const fetchCategory = () => {\r\n        axios.get('https://api.chucknorris.io/jokes/categories').then(res => setCategory(res.data))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <img src='http://vashnarkolog.com/wp-content/uploads/f/6/7/f6761e72bb7db954662e4c323be09f4e.jpe' style={{width: '100%',height: '300px', margin: '0 auto 15px'}}/>\r\n            <button style={{fontSize: '30px', fontWeight: '600'}} onClick={generateJoke}>Generate joke</button>\r\n            {jokesItems}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Main;","import logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\nimport Main from './containers/jokes/index'\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path='/jokes' component={Main} /> \n      </Switch>\n    </Router>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}